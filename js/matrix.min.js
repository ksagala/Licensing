function featureSearchKeyUp(){PageData.FeatureSearchChanged=!0}function applySearchFilter(){const e=PageData.FeatureSearchInput.value.toUpperCase();for(let t=0;t<PageData.TableRows.length;t+=1){const a=PageData.TableRows[t],n=-1!==a.className.indexOf("stickyRow");if(!n){const t=a.getElementsByTagName("td")[0];if(t){const n=t.textContent||t.innerText;-1!==n.toUpperCase().indexOf(e)?a.style.display="table-row":a.style.display="none"}}}}function featureSearchTimer(){PageData.FeatureSearchChanged&&(PageData.FeatureSearchChanged=!1,applySearchFilter())}function setupFeatureSearch(){PageData.FeatureSearchInput=document.getElementById("featureSearch"),PageData.FeatureSearchInput.addEventListener("keyup",featureSearchKeyUp),setInterval(featureSearchTimer,250)}function countInGroup(e,t){let a=0,n=0;for(let o=0;o<PageData.DiagramGroups.length;o+=1){if(o===e){const e=n+PageData.DiagramGroups[o];for(let o=n;o<e;o+=1)t[o]&&(a+=1);return a}n+=PageData.DiagramGroups[o]}return-1}function getSelectedCheckboxes(){const e=new Array(PageData.DiagramCount);for(let t=0;t<PageData.ComparisonInputs.length;t+=1)if("checkbox"===PageData.ComparisonInputs[t].type){const a=PageData.ComparisonInputs[t].value,n=PageData.ComparisonInputs[t].checked;e[a]=n}return e}function setSelectedCheckboxes(e){for(let t=0;t<PageData.ComparisonInputs.length;t+=1)if("checkbox"===PageData.ComparisonInputs[t].type){const a=PageData.ComparisonInputs[t].value,n=e[a];PageData.ComparisonInputs[t].checked=n}}function isFalse(e){return!1===e}function findGroup(e,t){let a=0;for(let n=0;n<t.length;n+=1)if(a+=t[n],e<a)return n;return-1}function showColumns(e){const t=e.every(isFalse),a=[];for(let n=0;n<PageData.TableRows.length;n+=1){const o=PageData.TableRows[n];let l=!1,s=null;if(0===n){s=o.getElementsByTagName("th");let t=!0;for(let n=1;n<s.length;n+=1){const o=s[n],l=countInGroup(n-1,e);o.style.display=l>0?"table-cell":"none",o.setAttribute("colspan",l);const i=t?"groupA":"groupB";a.push(i),0!==l&&(o.className=i,t=!t)}}else{const i=-1!==o.className.indexOf("stickyRow3");1===n||i?s=o.getElementsByTagName("th"):(s=o.getElementsByTagName("td"),l=!t),i&&(l=!1);for(let t=1;t<s.length;t+=1){const o=s[t];if(1===n){const e=findGroup(t-1,PageData.DiagramGroups),n=a[e];o.className=n}e[t-1]?(o.style.display="table-cell",""!==o.textContent&&(l=!1)):o.style.display="none"}o.style.display=l?"none":"table-row"}}""!==PageData.FeatureSearchInput.value&&applySearchFilter()}function hashChanged(){const e=new Array(PageData.DiagramCount);e.fill(!0);const t=window.location.hash.substring(1);if(t.length===e.length)for(let a=0;a<t.length;a+=1)e[a]="1"===t[a];setSelectedCheckboxes(e),showColumns(e)}function checkboxChanged(){const e=getSelectedCheckboxes();let t="#";for(let a=0;a<e.length;a+=1)t+=e[a]?"1":"0";window.location.hash=t}function setupCheckboxes(){for(let e=0;e<PageData.ComparisonInputs.length;e+=1){const t=PageData.ComparisonInputs[e];"checkbox"===t.type&&t.addEventListener("change",checkboxChanged)}}function selectAllClick(e){e.preventDefault();let t="#";for(let e=0;e<PageData.DiagramCount;e+=1)t+="1";window.location.hash=t}function selectNoneClick(e){e.preventDefault();let t="#";for(let e=0;e<PageData.DiagramCount;e+=1)t+="0";window.location.hash=t}function setupComparisonSelection(){const e=document.getElementById("selectAll");e.addEventListener("click",selectAllClick);const t=document.getElementById("selectNone");t.addEventListener("click",selectNoneClick)}function appOffline(){document.getElementById("offline").style.display="block"}function appOnline(){document.getElementById("offline").style.display="none"}function pageLoad(){PageData.ComparisonContainer=document.getElementById("comparisons"),PageData.ComparisonInputs=PageData.ComparisonContainer.getElementsByTagName("input");const e=document.getElementById("featuresTable");PageData.TableRows=e.getElementsByTagName("tr"),Common.isIE&&(Common.fixToMaxItemWidth("licenseType",4,!1),Common.fixToMaxItemWidth("checkLabel",4,!1),PageData.ComparisonContainer.style.display="inline-block");const t=document.getElementById("header");t.style.width=document.body.scrollWidth+"px",setupComparisonSelection(),setupFeatureSearch(),setupCheckboxes(),hashChanged(),window.addEventListener("hashchange",hashChanged),document.getElementById("offline").style.display=navigator.onLine?"none":"block",window.addEventListener("offline",appOffline),window.addEventListener("online",appOnline)}const PageData={ComparisonContainer:null,ComparisonInputs:null,DiagramCount:18,DiagramGroups:[1,3,5,4,5],FeatureSearchInput:null,FeatureSearchChanged:!1,TableRows:null};window.addEventListener("load",pageLoad);